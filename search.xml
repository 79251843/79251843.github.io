<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo部署Github2</title>
      <link href="/posts/10021974.html"/>
      <url>/posts/10021974.html</url>
      
        <content type="html"><![CDATA[<p>安装 hexo-deployer-git</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2 id="部署前置步骤"><a href="#部署前置步骤" class="headerlink" title="部署前置步骤"></a>部署前置步骤</h2><p>一、注册 Github 账户：点击此处访问 <a href="https://github.com/">Github 官网</a>，点击 Sign Up 注册账户</p><p>二、创建项目代码库：点击 New repository 开始创建，步骤及注意事项见图：<br><a href="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/12.png"><img src="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/12.png"></a><br><a href="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/13.png"><img src="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/13.png"></a><br>三、配置 <code>SSH</code> 密钥：只有配置好 <code>SSH</code> 密钥后，我们才可以通过 git 操作实现本地代码库与 Github 代码库同步，在你第一次新建的文件夹里面（如：我的文件夹为：<code>F\QiQi_Blog</code>） <code>Git Bash Here</code> 输入以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your email@example.com&quot;  </span><br><span class="line">//引号里面填写你的邮箱地址，比如我的是413791664@qq.com</span><br></pre></td></tr></table></figure><p>之后会出现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.  </span><br><span class="line">Enter file in which to save the key (/c/Users/you/.ssh/id_rsa):  </span><br><span class="line">//到这里可以直接回车将密钥按默认文件进行存储</span><br></pre></td></tr></table></figure><p>然后会出现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):  </span><br><span class="line">//这里是要你输入密码，其实不需要输什么密码，直接回车就行  </span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure><p>接下来屏幕会显示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved in /c/Users/you/.ssh/id_rsa.  </span><br><span class="line">Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.  </span><br><span class="line">The key fingerprint is:  </span><br><span class="line">这里是各种字母数字组成的字符串，结尾是你的邮箱  </span><br><span class="line">The key&#x27;s randomart image is:  </span><br><span class="line">这里也是各种字母数字符号组成的字符串</span><br></pre></td></tr></table></figure><p>运行以下命令，将公钥的内容复制到系统粘贴板上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>四、在 GitHub 账户中添加你的公钥<br>1.登陆 GitHub，进入 <code>Settings</code>：<br><a href="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/14.png"><img src="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/14.png"></a><br>2.点击 <code>SSH and GPG Keys</code>：<br><a href="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/15.png"><img src="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/15.png"></a><br>3.选择 New SSH key：<br><a href="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/16.png"><img src="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/16.png"></a><br>4.粘贴密钥：<br><a href="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/17.png"><img src="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/17.png"></a><br>五、测试<br>直接在桌面右键 点击 Git Bash Here，输入以下命令输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>六、配置 Git 个人信息<br>Git 会根据用户的名字和邮箱来记录提交，GitHub 也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是 GitHub 的昵称，但为了方便记忆，建议与 GitHub 一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;此处填你的用户名&quot;  </span><br><span class="line">git config --global user.email &quot;此处填你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>到此为止 SSH Key 配置成功，本机已成功连接到 Github</p>]]></content>
      
      
      <categories>
          
          <category> hexo系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建1</title>
      <link href="/posts/6611e2c5.html"/>
      <url>/posts/6611e2c5.html</url>
      
        <content type="html"><![CDATA[<p>1.安装<a href="https://nodejs.org/en/download/">Node.js 官网</a><br>2.安装<a href="https://git-scm.com/downloads">Git 官网</a></p><h2 id="检验软件是否安装成功"><a href="#检验软件是否安装成功" class="headerlink" title="检验软件是否安装成功"></a>检验软件是否安装成功</h2><p>修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成淘宝镜像。打开CMD窗口，运行如下命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure><p>同时按下 Win 键和 R 键打开运行窗口,输入 <code>cmd</code> ，然后输入以下命令，有相应版本信息显示则安装成功，若不正确可以卸载软件重新安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git --version  </span><br><span class="line">node -v  </span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h2 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><p>选择一个磁盘，新建一个文件夹，自己重命名文件夹（如：我的文件夹为：F\Blog），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击 Git Bash Here，输入以下 npm 命令即可安装,第一次可能需要久一点输入命令后等一等，再输入第二条命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>这个命令表示安装 hexo 的脚手架，如图所示即为安装成功<a href="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/7.png"><img src="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/7.png"></a></p><h2 id="Hexo-初始化配置如："><a href="#Hexo-初始化配置如：" class="headerlink" title="Hexo 初始化配置如："></a>Hexo 初始化配置如：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npx hexo init</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:goodboy010/goodboy010.github.io.git</span><br><span class="line">  branch: main</span><br><span class="line"></span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>第一个命令，如图所示则安装成功如果失败了就再输入一次，<del>比如说我就错了</del> ，第二个命令表示安装 hexo 部署到 git page 的 deployer<br><a href="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/8.png"><img src="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/8.png"></a><br>Hexo 安装完成后，将会在指定文件夹中新建所需要的文件，Hexo 文件夹下的目录如下：<br><a href="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/9.png"><img src="https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/blog-construct/9.png"></a></p><h2 id="本地查看效果"><a href="#本地查看效果" class="headerlink" title="本地查看效果"></a>本地查看效果</h2><p>执行以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate  </span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>执行完即可登录 <a href="http://localhost:4000/">http://localhost:4000/</a> 查看效果</p>]]></content>
      
      
      <categories>
          
          <category> hexo系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客笔记写作</title>
      <link href="/posts/ea687187.html"/>
      <url>/posts/ea687187.html</url>
      
        <content type="html"><![CDATA[<h1 id="写作命令"><a href="#写作命令" class="headerlink" title="写作命令"></a>写作命令</h1><p><code>hexo n &quot;文章标题&quot;</code></p><h2 id="Page-Front-matter-用于-页面-配置"><a href="#Page-Front-matter-用于-页面-配置" class="headerlink" title="Page Front-matter 用于 页面 配置"></a>Page Front-matter 用于 <code>页面</code> 配置</h2><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】页面标题</td></tr><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标签、分类和友情链接三个页面需要配置</td></tr><tr><td>updated</td><td>【可选】页面更新日期</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块 (默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的<code>音乐</code> 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开 (true&#x2F;false) (默认为设置中 highlight_shrink 的配置)</td></tr><tr><td>random</td><td>【可选】配置友情链接是否随机排序（默认为 false）</td></tr><tr><td>limit</td><td>【可选】配置説説显示数量</td></tr><tr><td>limit.type</td><td>【可选】配置説説显示数量的类型 （date 或者 num）</td></tr><tr><td>limit.value</td><td>【可选】配置説説显示数量的值</td></tr></tbody></table><h1 id="Post-Front-matter-用于-文章页-配置"><a href="#Post-Front-matter-用于-文章页-配置" class="headerlink" title="Post Front-matter 用于 文章页 配置"></a>Post Front-matter 用于 <code>文章页</code> 配置</h1><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】文章标题</td></tr><tr><td>date</td><td>【必需】文章创建日期</td></tr><tr><td>updated</td><td>【可选】文章更新日期</td></tr><tr><td>tags</td><td>【可选】文章标签</td></tr><tr><td>categories</td><td>【可选】文章分类</td></tr><tr><td>keywords</td><td>【可选】文章关键字</td></tr><tr><td>description</td><td>【可选】文章描述</td></tr><tr><td>top_img</td><td>【可选】文章顶部图片</td></tr><tr><td>cover</td><td>【可选】文章缩略图(如果没有设置 top_img,文章页顶部将显示缩略图，可设为 false&#x2F;图片地址&#x2F;留空)</td></tr><tr><td>comments</td><td>【可选】显示文章评论模块(默认 true)</td></tr><tr><td>toc</td><td>【可选】显示文章 TOC(默认为设置中 toc 的 enable 配置)</td></tr><tr><td>toc_number</td><td>【可选】显示 toc_number(默认为设置中 toc 的 number 配置)</td></tr><tr><td>toc_style_simple</td><td>【可选】显示 toc 简洁模式</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块(默认为设置中 post_copyright 的 enable 配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的<code>文章作者</code></td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的<code>文章作者</code>链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的<code>文章连结</code>链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的<code>版权声明</code>文字</td></tr><tr><td>mathjax</td><td>【可选】显示 mathjax(当设置 mathjax 的 per_page: false 时，才需要配置，默认 false )</td></tr><tr><td>katex</td><td>【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false )</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的<code>音乐</code> 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true&#x2F;false)(默认为设置中 highlight_shrink 的配置)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>abcjs</td><td>【可选】加载 abcjs (当设置 abcjs 的 per_page: false 时，才需要配置，默认 false )</td></tr><tr><td>noticeOutdate</td><td>【可选】文章过期提醒 (默认为设置中 noticeOutdate 的 enable 配置)</td></tr></tbody></table><p>写作结束</p>]]></content>
      
      
      <categories>
          
          <category> hexo系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github加速方法</title>
      <link href="/posts/d9e3a07d.html"/>
      <url>/posts/d9e3a07d.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>官方下载地址：<a href="https://steampp.net/">瓦特工具箱(Steam++官网) - Watt Toolkit</a></p></li><li><p>开源仓库：<a href="https://kkgithub.com/521xueweihan/GitHub520">521xueweihan&#x2F;GitHub520: :kissing_heart: 让你“爱”上 GitHub，解决访问时图裂、加载慢的问题。（无需安装）</a></p></li><li><p>Xbox下载加速器：<a href="https://kkgithub.com/skydevil88/XboxDownload">skydevil88&#x2F;XboxDownload: Xbox下载助手，支持Xbox、微软商店、PS、NS、EA app &amp; Origin、战网、Epic、育碧、Riot Games下载加速，修复Steam商店社区、GitHub访问。</a></p></li><li><p>一行命令上GitHub的仓库： <a href="https://kkgithub.com/feng2208/github-hosts">feng2208&#x2F;github-hosts: 加速github，听spotify无限切歌。</a></p></li><li><p>在GitHub前面加kk即可访问：<a href="https://kkgithub.com/">github主页</a></p></li><li><p><a href="https://github.com/SpaceTimee/Sheas-Cealer">SpaceTimee&#x2F;Sheas-Cealer: Just Ceal It (可用于无代理合法抵御网络监听和开展网络研究)</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> hexo系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 节点 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
